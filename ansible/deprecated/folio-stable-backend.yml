---

# This playbook requires two variables to be set at runtime:
# -e "folio_hostname=HOSTNAME (shortname)"
# -e "ec2_group=EC2_GROUP_TAG"

- hosts: localhost
  connection: local
  gather_facts: no

  pre_tasks:
    - name: include global ec2 vars
      include_vars: 
        dir: group_vars/ec2

    - name: find correct ec2 AMI
      ec2_ami_find: 
        owner: 099720109477
        name: "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-*"
        region: "{{ aws_region }}"
        sort: name
        sort_order: descending
        sort_end: 1
        no_result_action: fail
      register: ami_find  

  roles:
    - { role: launch_ec2_instance,
          ec2_security_groupids:  ["{{ okapi_ec2_security_groupid }}", "{{ postgres_ec2_security_groupid }}"],
          ec2_group: "{{ ec2_group }}",
          ec2_hostgroups: "tag_Env_ci,tag_Group_{{ ec2_group }},tag_Okapi_true,tag_Postgres_true",
          ec2_instance_type: 't2.large',
          ec2_ami: "{{ ami_find.results[0].ami_id }}",
          ec2_instance_tags: '{ "Env":"ci","Group":"{{ ec2_group }}","Okapi":"true","Postgres":"true" }'
      }


- hosts: "tag_Group_{{ ec2_group }}"
  remote_user: ubuntu
  become: yes
  become_method: sudo
  gather_facts: no

  tasks:
    - name: Bootstrap Python 2.x
      raw: test -e /usr/bin/python || (apt -qqy update && apt install -qy python-minimal)
      register: output
      changed_when: output.stdout != ""


- hosts: "tag_Group_{{ ec2_group }}"
  remote_user: ubuntu
  become: yes
  become_method: sudo

  pre_tasks:
    - name: include global ec2 vars
      include_vars: 
        dir: group_vars/ec2

    - name: include vars for stable-backend
      include_vars: 
        file: group_vars/stable-backend.yml

    - name: include backend module config
      include_vars: 
        file: folio-ansible/group_vars/stable

    - name: gather ec2 facts
      ec2_facts:
      register: ec2_facts

  roles:
     - folio-ansible/roles/common
     - { role: filebeat,
               filebeat_tags: "[ '{{ folio_hostname }}.aws.indexdata.com' ]" }
     - folio-ansible/roles/postgresql
     - { role: folio-ansible/roles/okapi,
              okapi_storage: postgres }
     - folio-ansible/roles/okapi-deploy-modules
     - folio-ansible/roles/mod-auth-data
     - folio-ansible/roles/mod-configuration-data
     - folio-ansible/roles/mod-users-data
     - folio-ansible/roles/mod-users-bl-data
     - folio-ansible/roles/mod-circulation-data
     - folio-ansible/roles/mod-notify-data
     - folio-ansible/roles/mod-notes-data
     - folio-ansible/roles/mod-auth-demo-users

  post_tasks:
    - name: create FOLIO DNS alias to the instance
      become: no
      local_action:
        module: route53 
        command: create
        overwrite: yes
        record: "{{ folio_hostname }}.aws.indexdata.com"
        value: "{{ ec2_facts.ansible_facts.ansible_ec2_public_hostname }}"
        type: 'CNAME'
        ttl: 60
        zone: 'aws.indexdata.com'
        aws_access_key: "{{ jenkins_aws_access_key }}"
        aws_secret_key: "{{ jenkins_aws_secret_key }}"

    - name: create internal FOLIO DNS alias to the instance
      become: no
      local_action:
        module: route53 
        command: create
        overwrite: yes
        record: "{{ folio_hostname }}.indexdata.internal"
        value: "{{ ec2_facts.ansible_facts.ansible_ec2_local_hostname }}"
        type: 'CNAME'
        ttl: 60
        zone: 'indexdata.internal'
        private_zone: true
        aws_access_key: "{{ jenkins_aws_access_key }}"
        aws_secret_key: "{{ jenkins_aws_secret_key }}"
